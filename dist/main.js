"use strict";var e;function o(e){var o,r;if((null!==(r=null===(o=e.controller)||void 0===o?void 0:o.level)&&void 0!==r?r:0)<2)return 1;const t=e.find(FIND_SOURCES).length,n=e.find(FIND_MY_STRUCTURES,{filter:e=>e.structureType===STRUCTURE_EXTENSION}).length,i=e.find(FIND_STRUCTURES,{filter:e=>e.structureType===STRUCTURE_CONTAINER}).length;return n<5||i<t?2:2.5}function r(e){const o={harvester:0,upgrader:0,builder:0,miner:0,hauler:0};for(const r of Object.values(Game.creeps)){if(r.room.name!==e.name)continue;const t=r.memory.role;void 0!==o[t]&&o[t]++}return o}Object.defineProperty(exports,"__esModule",{value:!0}),function(e){e.Harvester="harvester",e.Upgrader="upgrader",e.Builder="builder",e.Miner="miner",e.Hauler="hauler"}(e||(e={}));const t=Object.values(e);function n(o){return o.find(FIND_SOURCES).every((r=>{const t=e=>e.room.name===o.name,n=e=>e.memory.sourceId===r.id;if(Object.values(Game.creeps).filter((o=>t(o)&&o.memory.role===e.Miner&&n(o))).length>=1)return!0;return Object.values(Game.creeps).filter((o=>t(o)&&o.memory.role===e.Harvester&&n(o))).length>=2}))}function i(e){const r=o(e),i=e.find(FIND_CONSTRUCTION_SITES).length,s=e.find(FIND_SOURCES),c=2*s.length,a=t.reduce(((e,o)=>(e[o]=0,e)),{});switch(r){case 1:return Object.assign(Object.assign({},a),{harvester:c,upgrader:n(e)?1:0});case 2:const o=e.find(FIND_STRUCTURES,{filter:e=>e.structureType===STRUCTURE_CONTAINER});return Object.assign(Object.assign({},a),{harvester:o.length>=1?c/2:c,builder:n(e)&&i>0?2:1,hauler:o.length>=1?1:0,miner:o.length>=1?1:0});case 2.5:return Object.assign(Object.assign({},a),{miner:s.length,hauler:s.length,builder:n(e)?1:0,upgrader:n(e)&&i>0?0:2});default:return Object.assign(Object.assign({},a),{harvester:c,builder:i>0?1:0,upgrader:i>0?0:1})}}const s={harvester:{ratio:{work:3,carry:1,move:1},minEnergyForRatio:400,fallbackBody:[WORK,CARRY,CARRY,MOVE,MOVE]},miner:{ratio:{work:5,move:1},minEnergyForRatio:550,dontRepeatBody:!0},builder:{ratio:{work:1,carry:2,move:2},minEnergyForRatio:300,fallbackBody:[WORK,CARRY,CARRY,MOVE,MOVE]},upgrader:{ratio:{work:2,carry:2,move:3},minEnergyForRatio:450,fallbackBody:[WORK,CARRY,MOVE]},hauler:{ratio:{carry:6,move:3},minEnergyForRatio:450}};function c(o){const t=o.room;!function(o){const t=i(o),n=r(o);o.memory.spawnQueue||(o.memory.spawnQueue=[]);const s=o.memory.spawnQueue,c=Object.values(e).reduce(((e,o)=>(e[o]=0,e)),{});for(const e of s)c[e.role]=(c[e.role]||0)+1;for(const o of Object.values(e)){const e=n[o]||0,r=c[o]||0,i=t[o]-e-r;for(let e=0;e<i;e++)s.push({role:o,timestamp:Game.time})}console.log(`queue (${Game.time}):`,JSON.stringify(s))}(t);const n=i(t),c=t.memory.spawnQueue;if(0===c.length)return;Game.time%10==0&&console.log("demand:\n"+JSON.stringify(n,null,2));const a=c[0],l=a.role,R=function(e,o){const r=s[e];if(!r)return[WORK,CARRY,MOVE];const t=[];for(const[e,o]of Object.entries(r.ratio))for(let r=0;r<o;r++)t.push(e);const n=t.reduce(((e,o)=>e+BODYPART_COST[o]),0);if(o<r.minEnergyForRatio||0===n)return r.fallbackBody||[];const i=r.dontRepeatBody?1:Math.floor(o/n),c=Math.min(i,Math.floor(50/t.length)),a=[];for(let e=0;e<c*t.length;e++)a.push(t[e%t.length]);return a}(a.role,t.energyAvailable);if(0===R.length)return;const u=function(e){const o={work:0,carry:0,move:0,attack:0,ranged_attack:0,tough:0,heal:0,claim:0};for(const r of e)o[r]++;return Object.entries(o).filter((([e,o])=>o>0)).map((([e,o])=>`${o}${e[0]}`)).join("")}(R),E=`${{harvester:"hr",builder:"b",upgrader:"u",miner:"m",hauler:"hl"}[l]||l}_${u}_${Game.time}`;let m;if(l===e.Harvester||l===e.Miner){const r=l===e.Miner?1:2,t=function(e,o,r=2){const t=e.find(FIND_SOURCES),n={};for(const e of t)n[e.id]=0;for(const e of Object.values(Game.creeps))e.memory.role===o&&e.memory.sourceId&&(n[e.memory.sourceId]=(n[e.memory.sourceId]||0)+1);const i=t.find((e=>n[e.id]<r));return(null==i?void 0:i.id)||null}(o.room,l,r);if(!t)return void console.log("‚ùå No available source for role"+l);m=o.spawnCreep(R,E,{memory:{role:l,sourceId:t}}),m===OK&&console.log(`Spawning ${l}: ${E} ‚Üí source ${t}`)}else if(l===e.Hauler){const e=function(e){const o=e.find(FIND_STRUCTURES,{filter:e=>e.structureType===STRUCTURE_CONTAINER}),r={};for(const e of o)r[e.id]=0;for(const e of Object.values(Game.creeps))"hauler"===e.memory.role&&e.memory.containerId&&(r[e.memory.containerId]=(r[e.memory.containerId]||0)+1);const t=o.find((e=>r[e.id]<1));return(null==t?void 0:t.id)||null}(o.room);if(!e)return void console.log("‚ùå No available container for hauler");m=o.spawnCreep(R,E,{memory:{role:l,containerId:e}}),m===OK&&console.log(`Spawning hauler: ${E} ‚Üí container ${e}`)}else m=o.spawnCreep(R,E,{memory:{role:l}}),m===OK&&console.log(`Spawning ${l}: ${E}`);m===OK&&(t.memory.spawnQueue=c.slice(1))}const a=[[0,-2],[1,-1],[2,0],[1,1],[0,2],[-1,1],[-2,0],[-1,-1]];function l(e){if(Game.time%10!=0)return;if(2===o(e))!function(e){const o=e.controller;if(!o||!o.my||o.level<2)return;const r=CONTROLLER_STRUCTURES.extension[o.level],t=e.find(FIND_MY_STRUCTURES,{filter:e=>e.structureType===STRUCTURE_EXTENSION}).length,n=e.find(FIND_MY_CONSTRUCTION_SITES,{filter:e=>e.structureType===STRUCTURE_EXTENSION}).length,i=r-(t+n);if(i<=0)return;const s=e.find(FIND_MY_SPAWNS)[0];if(!s)return;let c=0;for(const[o,r]of a){if(c>=i)return;const t=s.pos.x+o,n=s.pos.y+r;if(!(e.lookForAt(LOOK_STRUCTURES,t,n).length>0||e.lookForAt(LOOK_CONSTRUCTION_SITES,t,n).length>0)){e.createConstructionSite(t,n,STRUCTURE_EXTENSION)===OK&&c++}}}(e),function(e){const o=e.find(FIND_MY_SPAWNS)[0];if(!o)return;e.memory.containerPositions||(e.memory.containerPositions={});for(const r of e.find(FIND_SOURCES)){if(e.memory.containerPositions[r.id])continue;console.log("no memory of this source having a container",r);const t=R.map((([o,t])=>new RoomPosition(r.pos.x+o,r.pos.y+t,e.name))).filter((o=>e.getTerrain().get(o.x,o.y)!==TERRAIN_MASK_WALL&&(!(o.lookFor(LOOK_STRUCTURES).length>0)&&!(o.lookFor(LOOK_CONSTRUCTION_SITES).length>0))));if(0===t.length)continue;t.sort(((e,r)=>o.pos.getRangeTo(e)-o.pos.getRangeTo(r)));const n=t[0],i=e.createConstructionSite(n.x,n.y,STRUCTURE_CONTAINER);i===OK?(e.memory.containerPositions[r.id]={x:n.x,y:n.y},console.log(`‚úèÔ∏è Placed container for source ${r.id} at (${n.x},${n.y})`)):console.log(`‚ùå Failed to place container at (${n.x},${n.y}): ${i}`)}}(e)}const R=[[-1,-1],[0,-1],[1,-1],[-1,0],[1,0],[-1,1],[0,1],[1,1]];class u{collectEnergy(e){const o=e.room.find(FIND_STRUCTURES,{filter:e=>(e.structureType===STRUCTURE_SPAWN||e.structureType===STRUCTURE_EXTENSION)&&e.store.getUsedCapacity(RESOURCE_ENERGY)>0});if(o.length>0)return void(e.withdraw(o[0],RESOURCE_ENERGY)===ERR_NOT_IN_RANGE&&e.moveTo(o[0]));const r=e.room.find(FIND_SOURCES);r.length>0&&e.harvest(r[0])===ERR_NOT_IN_RANGE&&e.moveTo(r[0])}updateWorkingState(e){e.memory.working&&0===e.store[RESOURCE_ENERGY]&&(e.memory.working=!1),e.memory.working||0!==e.store.getFreeCapacity()||(e.memory.working=!0)}}function E(e){if(e.store.getFreeCapacity(RESOURCE_ENERGY)>0){const o=e.pos.findClosestByPath(FIND_DROPPED_RESOURCES,{filter:e=>e.resourceType===RESOURCE_ENERGY&&e.amount>50});if(o)return void(e.pickup(o)===ERR_NOT_IN_RANGE&&e.moveTo(o))}const o=e.room.find(FIND_CONSTRUCTION_SITES);if(o.length>0){if(0===e.store.getFreeCapacity(RESOURCE_ENERGY)){const r=e.pos.findClosestByPath(o);return void(r&&e.build(r)===ERR_NOT_IN_RANGE&&e.moveTo(r))}{const o=e.room.find(FIND_STRUCTURES,{filter:e=>e.structureType===STRUCTURE_CONTAINER&&e.store[RESOURCE_ENERGY]>0});if(o.length>0)return void(e.withdraw(o[0],RESOURCE_ENERGY)===ERR_NOT_IN_RANGE&&e.moveTo(o[0]))}}const n=e.room.controller;if(n&&function(e){const o=i(e),n=r(e);for(const e of t)if(n[e]<o[e])return!1;return!0}(e.room)){const o=e.room.find(FIND_STRUCTURES,{filter:e=>e.structureType===STRUCTURE_CONTAINER&&e.store[RESOURCE_ENERGY]>0}),r=200;if(o.reduce(((e,o)=>e+o.store[RESOURCE_ENERGY]),0)>=r||e.room.energyAvailable>=r){if(0===e.store.getFreeCapacity(RESOURCE_ENERGY))return void(e.upgradeController(n)===ERR_NOT_IN_RANGE&&e.moveTo(n));if(o.length>0)return void(e.withdraw(o[0],RESOURCE_ENERGY)===ERR_NOT_IN_RANGE&&e.moveTo(o[0]))}}e.say("ü™ë idle")}const m={harvester:new class extends u{run(e){this.updateWorkingState(e),e.memory.working?this.deliverEnergy(e):this.harvest(e)}deliverEnergy(e){const o=e.room.find(FIND_STRUCTURES,{filter:e=>(e.structureType===STRUCTURE_SPAWN||e.structureType===STRUCTURE_EXTENSION)&&e.store.getFreeCapacity(RESOURCE_ENERGY)>0});o.length>0&&e.transfer(o[0],RESOURCE_ENERGY)===ERR_NOT_IN_RANGE&&e.moveTo(o[0])}harvest(e){const o=e.memory.sourceId;let r=o?Game.getObjectById(o):null;if(!r){if(r=e.pos.findClosestByPath(FIND_SOURCES),!r)return void e.say("‚ùì no src");e.memory.sourceId=r.id,e.say("üîÅ")}e.harvest(r)===ERR_NOT_IN_RANGE&&e.moveTo(r)}},builder:new class extends u{run(e){this.updateWorkingState(e),e.memory.working?this.buildOrRepair(e):this.collectEnergy(e)}buildOrRepair(e){const o={[STRUCTURE_CONTAINER]:{pct:.8},[STRUCTURE_ROAD]:{hp:5e3},[STRUCTURE_EXTENSION]:{pct:.8}},r=e.room.find(FIND_STRUCTURES,{filter:e=>{if(e.structureType===STRUCTURE_WALL||e.structureType===STRUCTURE_RAMPART)return!1;const r=o[e.structureType];if(!r)return!1;const t=e.hitsMax-e.hits;return null!=r.pct&&e.hits<e.hitsMax*r.pct||null!=r.hp&&t>r.hp}});if(r.length>0){const o=e.pos.findClosestByRange(r);return void(o&&e.repair(o)===ERR_NOT_IN_RANGE&&e.moveTo(o,{visualizePathStyle:{stroke:"#ff0000"}}))}const t=e.room.find(FIND_CONSTRUCTION_SITES);if(0===t.length){const o=e.room.find(FIND_MY_SPAWNS)[0];return void(o&&e.moveTo(o))}const n=e.pos.findClosestByRange(t);n&&e.build(n)===ERR_NOT_IN_RANGE&&e.moveTo(n,{visualizePathStyle:{stroke:"#ffffff"}})}},upgrader:new class extends u{run(e){this.updateWorkingState(e),e.memory.working?e.upgradeController(e.room.controller)===ERR_NOT_IN_RANGE&&e.moveTo(e.room.controller):this.collectEnergy(e)}},miner:new class extends u{run(e){const o=e.memory.sourceId,r=e.room.memory.containerPositions;if(!o)return void e.say("‚ùì no src");if(!r||!r[o])return void e.say("‚ùå no pos");const{x:t,y:n}=r[o],i=new RoomPosition(t,n,e.room.name);if(!e.pos.isEqualTo(i))return void e.moveTo(i,{visualizePathStyle:{stroke:"#ffaa00"}});const s=Game.getObjectById(o);if(!s)return void e.say("‚ùì src gone");e.harvest(s)!==OK&&e.say("üíÄ fail")}},hauler:new class extends u{run(e){if(this.updateWorkingState(e),e.memory.working){const o=e.room.find(FIND_STRUCTURES,{filter:e=>(e.structureType===STRUCTURE_SPAWN||e.structureType===STRUCTURE_EXTENSION)&&e.store.getFreeCapacity(RESOURCE_ENERGY)>0});if(o.length>0)return void(e.transfer(o[0],RESOURCE_ENERGY)===ERR_NOT_IN_RANGE&&e.moveTo(o[0]))}const o=e.memory.containerId?Game.getObjectById(e.memory.containerId):null;o&&o.store[RESOURCE_ENERGY]>0?e.withdraw(o,RESOURCE_ENERGY)===ERR_NOT_IN_RANGE&&e.moveTo(o):E(e)}}};exports.loop=function(){var e;!function(){for(const e in Memory.creeps)e in Game.creeps||(delete Memory.creeps[e],console.log(`üßπ Cleaned up memory for dead creep: ${e}`))}();const o=Object.values(Game.spawns)[0];o&&c(o);for(const e of Object.values(Game.rooms))l(e);for(const o in Game.creeps){const r=Game.creeps[o],t=r.memory.role;null===(e=m[t])||void 0===e||e.run(r)}};
