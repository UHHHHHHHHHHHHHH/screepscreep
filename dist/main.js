"use strict";var e;function o(e){var o;const r=e.controller,t=null!==(o=null==r?void 0:r.level)&&void 0!==o?o:0;if(t<2)return 1;const n=e.find(FIND_SOURCES).length,i=e.find(FIND_MY_STRUCTURES,{filter:e=>e.structureType===STRUCTURE_EXTENSION}).length,s=e.find(FIND_STRUCTURES,{filter:e=>e.structureType===STRUCTURE_CONTAINER}).length;if(2===t){return i<(CONTROLLER_STRUCTURES.extension[2]||5)||n>0&&s<n?2:2.5}return 3===t?3:t>3?3.5:t}function r(o){const r={};for(const o of Object.values(e))r[o]=0;for(const e in Game.creeps){const t=Game.creeps[e];if(t.room.name!==o.name||t.spawning)continue;const n=t.memory.role;void 0!==r[n]?r[n]++:Game.time%100==0&&console.log(`Warning: Creep ${t.name} in room ${o.name} has an unknown role: '${t.memory.role}'`)}return r}function t(e){return e.memory.resourceStats&&e.memory.resourceStats.tickLastUpdated===Game.time||function(e){!function(e){e.memory.resourceStats||(e.memory.resourceStats={energyInStructures:0,energyInPiles:0,energyInTransit:0,totalEnergy:0,energyAvailable:0,energyCapacityAvailable:0,tickLastUpdated:0})}(e);const o=e.memory.resourceStats,r=e.find(FIND_STRUCTURES).reduce(((e,o)=>{if("store"in o&&o.store&&"function"==typeof o.store.getUsedCapacity){const r=o.store.getUsedCapacity(RESOURCE_ENERGY);if(r&&r>0)return e+r}return e}),0),t=e.find(FIND_DROPPED_RESOURCES,{filter:e=>e.resourceType===RESOURCE_ENERGY}).reduce(((e,o)=>e+o.amount),0),n=e.find(FIND_MY_CREEPS).reduce(((e,o)=>{var r;return e+((null===(r=o.store)||void 0===r?void 0:r.getUsedCapacity(RESOURCE_ENERGY))||0)}),0),i=r+t+n;o.energyInStructures=r,o.energyInPiles=t,o.energyInTransit=n,o.totalEnergy=i,o.energyAvailable=e.energyAvailable,o.energyCapacityAvailable=e.energyCapacityAvailable,o.tickLastUpdated=Game.time}(e),e.memory.resourceStats}function n(e){const o=t(e),r=[`üìä [${e.name}] Energy Stats (Tick: ${o.tickLastUpdated}):`,`    ‚û°Ô∏è  Spawnable: ${o.energyAvailable} / ${o.energyCapacityAvailable}`,`    üè¶ Stored (Structs): ${o.energyInStructures}`,`    ü™ô Dropped (Ground): ${o.energyInPiles}`,`    üöö Carried (Creeps): ${o.energyInTransit}`,`    Œ£  Total Liquid: ${o.totalEnergy}`].join("\n");console.log(r)}Object.defineProperty(exports,"__esModule",{value:!0}),function(e){e.Harvester="harvester",e.Upgrader="upgrader",e.Builder="builder",e.Miner="miner",e.Hauler="hauler"}(e||(e={}));const i=Object.values(e);function s(r){const t=r.find(FIND_SOURCES);return 0===t.length||t.every((t=>{const n=e=>Object.values(Game.creeps).filter((o=>o.room.name===r.name&&o.memory.role===e&&o.memory.sourceId===t.id)).length;if(n(e.Miner)>=1)return!0;const i=o(r)<2.5?2:0;return i>0&&n(e.Harvester)>=i}))}function a(n){const i=o(n),a=r(n),l=n.find(FIND_CONSTRUCTION_SITES).length,c=n.find(FIND_SOURCES),m=c.length,R=t(n),E=n.energyAvailable,u={};function y(e,o,r){o>0?u[e]=Object.assign({count:o},r):u[e]&&delete u[e]}const d=(a[e.Miner]||0)>0,f=(a[e.Harvester]||0)>0,T=E<5*BODYPART_COST[WORK]+BODYPART_COST[MOVE]+50;if(m>0&&!d&&!f&&T)return console.log(`[${n.name}] EMERGENCY: No income, low energy (${E}). Demanding 1 cheap Harvester.`),y(e.Harvester,1,{isEmergency:!0,maxCost:Math.max(300,E),priority:0}),u;const p=2*m;let g=5,S=7;const _=a[e.Miner]||0,C=a[e.Hauler]||0;switch(m>0&&(_>C?(S=4,g=6,Game.time%20==1&&console.log(`[${n.name}] Prioritizing Haulers (M:${_} > H:${C})`)):C>_&&(g=4,S=6,Game.time%20==2&&console.log(`[${n.name}] Prioritizing Miners (H:${C} > M:${_}, but need M)`))),i){case 1:y(e.Harvester,p,{priority:10}),s(n)&&y(e.Upgrader,2,{priority:50});break;case 2:let o=0;if(n.memory.containerPositions)for(const e of c)if(n.memory.containerPositions[e.id]){const r=n.memory.containerPositions[e.id];n.lookForAt(LOOK_STRUCTURES,r.x,r.y).some((e=>e.structureType===STRUCTURE_CONTAINER))&&o++}const r=m-o;y(e.Miner,o,{priority:5}),y(e.Hauler,o>0?Math.max(1,o)+(R.energyInPiles>750?1:0):0,{priority:7}),y(e.Harvester,2*r,{priority:10}),s(n)&&l>0&&y(e.Builder,Math.min(2,l),{priority:30}),s(n)&&0===l&&(o>0||E>.5*n.energyCapacityAvailable)&&y(e.Upgrader,1,{priority:50});break;case 2.5:y(e.Miner,m,{priority:g}),y(e.Hauler,m+(R.energyInPiles>1e3?1:0),{priority:S}),s(n)&&l>0&&y(e.Builder,Math.min(2,l),{priority:30}),s(n)&&0===l&&y(e.Upgrader,Math.min(3,Math.floor(1.5*n.controller.level)),{priority:50});break;default:y(e.Miner,m,{priority:g}),y(e.Hauler,m+(R.energyInPiles>1e3?1:0),{priority:S}),s(n)&&l>0&&y(e.Builder,Math.min(3,Math.ceil(l/5)),{priority:30}),s(n)&&0===l&&y(e.Upgrader,Math.min(6,Math.max(1,8-n.controller.level)),{priority:50})}const O=u[e.Builder];O&&E<.3*n.energyCapacityAvailable&&(a[e.Builder]||0)>0&&O.count>0&&y(e.Builder,Math.max(0,O.count-1),{priority:O.priority});const U=n.memory.roleDemandOverrides||{};for(const e of Object.keys(U)){const o=U[e];if(null!=o)if(o>0){const r=u[e];y(e,o,{priority:(null==r?void 0:r.priority)||99,maxCost:null==r?void 0:r.maxCost,isEmergency:null==r?void 0:r.isEmergency})}else delete u[e]}return u}function l(e,o,r){e.memory.roleDemandOverrides||(e.memory.roleDemandOverrides={}),null===r||r<0?void 0!==e.memory.roleDemandOverrides[o]?(delete e.memory.roleDemandOverrides[o],console.log(`[${e.name}] üóëÔ∏è Cleared role demand override for: ${o}`),0===Object.keys(e.memory.roleDemandOverrides).length&&delete e.memory.roleDemandOverrides):console.log(`[${e.name}] Info: No override found for role ${o} to clear.`):(e.memory.roleDemandOverrides[o]=r,console.log(`[${e.name}] üîß Set role demand override: ${o} -> ${r}`))}"undefined"!=typeof Game&&(Game.setRoleDemandOverride=l,Game.clearRoleDemandOverride=function(e,o){l(e,o,null)},Game.clearAllDemandOverrides=function(e){e.memory.roleDemandOverrides?(delete e.memory.roleDemandOverrides,console.log(`[${e.name}] üóëÔ∏è Cleared all role demand overrides.`)):console.log(`[${e.name}] Info: No overrides found to clear.`)});const c={harvester:{ratio:{work:3,carry:1,move:1},minEnergyForRatio:400,fallbackBody:[WORK,WORK,CARRY,MOVE]},miner:{ratio:{work:5,move:1},minEnergyForRatio:550,dontRepeatBody:!0},builder:{ratio:{work:2,carry:2,move:2},minEnergyForRatio:400,fallbackBody:[WORK,CARRY,CARRY,MOVE,MOVE]},upgrader:{ratio:{work:3,carry:2,move:3},minEnergyForRatio:550,fallbackBody:[WORK,WORK,CARRY,MOVE]},hauler:{ratio:{carry:6,move:3},minEnergyForRatio:450,fallbackBody:[CARRY,CARRY,CARRY,CARRY,MOVE,MOVE]}};function m(e){return e&&0!==e.length?e.reduce(((e,o)=>e+BODYPART_COST[o]),0):0}function R(o,r,t=!1){const n=c[o];if(!n){console.log(`ERROR: No RoleConfig found for role: ${o}.`);const e=[WORK,CARRY,MOVE];return r>=m(e)?e:[]}const i=[],s=[];for(const[e,r]of Object.entries(n.ratio))if(void 0!==BODYPART_COST[e]){s.push(e);for(let o=0;o<r;o++)i.push(e)}else console.log(`ERROR: Invalid body part '${e}' in ratio for role ${o}`);const a=m(i);let l=[];if(r<n.minEnergyForRatio||0===a)n.fallbackBody&&n.fallbackBody.length>0&&r>=m(n.fallbackBody)&&(l=[...n.fallbackBody]);else if(n.dontRepeatBody)r>=a&&i.length>0&&i.length<=50&&(l=[...i]);else if(i.length>0){const e=Math.floor(r/a),o=i.length>0?Math.floor(50/i.length):0,t=Math.min(e,o);if(t>0)for(let e=0;e<t;e++)l.push(...i);let n=r-m(l);if(l.length<50&&n>0){let e;do{e=!1;for(const o of s){const r=BODYPART_COST[o];if(n>=r&&l.length<50&&(l.push(o),n-=r,e=!0),l.length>=50)break}}while(e&&l.length<50&&n>=Math.min(...s.map((e=>BODYPART_COST[e]))))}}if(0===l.length&&n.fallbackBody&&n.fallbackBody.length>0&&r>=m(n.fallbackBody)&&(l=[...n.fallbackBody]),0===l.length){let t=[];o===e.Harvester?t=[WORK,CARRY,MOVE]:o===e.Miner&&(t=[WORK,WORK,MOVE]),t.length>0&&r>=m(t)&&(l=t)}if(l.length>0){const e={[TOUGH]:1,[WORK]:2,[ATTACK]:3,[RANGED_ATTACK]:4,[CARRY]:5,[MOVE]:6,[HEAL]:7,[CLAIM]:8};l.sort(((o,r)=>(e[o]||99)-(e[r]||99)))}return l}function E(e){if(!e||0===e.length)return"empty";const o={};for(const r of e)o[r]=(o[r]||0)+1;return[TOUGH,WORK,CARRY,MOVE,ATTACK,RANGED_ATTACK,HEAL,CLAIM].filter((e=>o[e]&&o[e]>0)).map((e=>`${o[e]}${e[0]}`)).join("")}function u(e,o,r,t){const n=e.find(FIND_SOURCES),i={};for(const e of n)i[e.id]=0;for(const r in Game.creeps){const t=Game.creeps[r];t.room.name===e.name&&t.memory.role===o&&t.memory.sourceId&&void 0!==i[t.memory.sourceId]&&i[t.memory.sourceId]++}for(const e of t)e.memory.role===o&&e.memory.sourceId&&void 0!==i[e.memory.sourceId]&&i[e.memory.sourceId]++;const s=n.find((e=>(i[e.id]||0)<r));return(null==s?void 0:s.id)||null}function y(o,r){const t=o.find(FIND_STRUCTURES,{filter:e=>e.structureType===STRUCTURE_CONTAINER});if(0===t.length)return null;const n={};for(const e of t)n[e.id]=0;for(const r in Game.creeps){const t=Game.creeps[r];t.room.name===o.name&&t.memory.role===e.Hauler&&t.memory.containerId&&void 0!==n[t.memory.containerId]&&n[t.memory.containerId]++}for(const o of r)o.memory.role===e.Hauler&&o.memory.containerId&&void 0!==n[o.memory.containerId]&&n[o.memory.containerId]++;const i=t.find((e=>(n[e.id]||0)<1));return(null==i?void 0:i.id)||null}function d(t){var n;if(t.spawning){return void(Game.creeps[t.spawning.name]&&t.room.visual.text(`üõ†Ô∏è ${t.spawning.name} (${t.spawning.remainingTime})`,t.pos.x+1,t.pos.y,{align:"left",opacity:.8,font:"0.7 Arial"}))}const i=t.room;Game.time%3==1&&i.find(FIND_MY_SPAWNS)[0].id===t.id&&function(t){t.memory.spawnQueue||(t.memory.spawnQueue=[]);const n=a(t),i=r(t),s=t.energyCapacityAvailable;t.energyAvailable;const l=[...t.memory.spawnQueue];let c=[];const d={[e.Harvester]:"hrv",[e.Builder]:"bld",[e.Upgrader]:"upg",[e.Miner]:"mnr",[e.Hauler]:"hal"},f=Object.values(e).reduce(((e,o)=>(e[o]=0,e)),{});for(const o of l){const r=o.role,t=n[r];t&&t.count>0&&(i[r]||0)+(f[r]||0)<t.count&&(t.isEmergency&&(o.memory.role,e.Harvester),c.push(o),f[r]++)}const T=Object.keys(n).map((e=>Object.assign({role:e},n[e]))).filter((e=>e.count>0)).sort(((e,o)=>(e.priority||99)-(o.priority||99)));for(const r of T){const n=r.role,a=i[n]||0,l=f[n]||0;let T=r.count-a-l;if(T>0)for(let i=0;i<T&&!(c.length>=10);i++){const a=r.maxCost||s,l=r.isEmergency||!1,T=R(n,a,l);if(0===T.length){Game.time%10==1&&console.log(`[${t.name}] ‚ö†Ô∏è Cannot form body for ${n} (Energy: ${a}, Emergency: ${l}). Demand: ${JSON.stringify(r)}`);continue}const p=m(T),g=E(T);let S="",_=0;do{S=`${d[n]||n[0]}${g}_${l?"EM_":""}${Game.time%1e3+i+_}`,_++}while((Game.creeps[S]||c.some((e=>e.name===S)))&&_<10);if(Game.creeps[S]||c.some((e=>e.name===S)))continue;const C={role:n};if(n===e.Miner||n===e.Harvester){const r=u(t,n,n===e.Miner?1:o(t)<2.5?2:1,c);if(r)C.sourceId=r;else if(n===e.Miner)continue}else if(n===e.Hauler){const e=y(t,c);e&&(C.containerId=e)}const O={role:n,body:T,name:S,memory:C,timestamp:Game.time,cost:p};l?(c.unshift(O),console.log(`[${t.name}] EMERGENCY: Queued ${S} (Cost: ${p}) to front.`)):c.push(O),f[n]=(f[n]||0)+1}if(c.length>=10)break}JSON.stringify(t.memory.spawnQueue)!==JSON.stringify(c)&&(t.memory.spawnQueue=c,(Game.time%10==9||c.some((e=>e.name.includes("_EM_"))))&&console.log(`[${t.name}] ‚ôª Spawn Queue updated (${l.length} -> ${c.length}): ${c.map((e=>e.role[0]+(e.name.includes("_EM_")?"!":""))).join("")||"empty"}`))}(i);const s=i.memory.spawnQueue;if(!s||0===s.length)return;const l=s[0];if(i.energyAvailable<l.cost)return void(Game.time%15==2&&t.id===(null===(n=i.find(FIND_MY_SPAWNS)[0])||void 0===n?void 0:n.id)&&console.log(`[${i.name}/${t.name}] ‚è≥ Waiting for energy (${i.energyAvailable}/${l.cost}) for ${l.role} ${l.name}`));const c=t.spawnCreep(l.body,l.name,{memory:l.memory});c===OK?(console.log(`[${i.name}/${t.name}] ‚úÖ Spawning ${l.role}: ${l.name} (cost: ${l.cost})`),s.shift()):c!==ERR_BUSY&&c!==ERR_NOT_ENOUGH_ENERGY&&(console.log(`[${i.name}/${t.name}] ‚ùå Failed to spawn ${l.name} (role ${l.role}) with error: ${c}. Body: ${JSON.stringify(l.body)}, Memory: ${JSON.stringify(l.memory)}`),c!==ERR_INVALID_ARGS&&c!==ERR_NAME_EXISTS||(console.log(`[${i.name}/${t.name}] Removing problematic spawn request: ${l.name}`),s.shift()))}const f={plainCost:2,swampCost:10,roomCallback:e=>{const o=Game.rooms[e];if(!o)return!1;const r=new PathFinder.CostMatrix;return o.find(FIND_STRUCTURES).forEach((e=>{e.structureType===STRUCTURE_ROAD&&r.set(e.pos.x,e.pos.y,1)})),r}};function T(e){var o;const r=e.find(FIND_MY_SPAWNS)[0],t=e.controller;if(!r||!t)return void(Game.time%50==0&&console.log(`[${e.name}] RoadManager: Missing spawn or controller, cannot plan roads.`));if(!e.memory.roadSitesPlanned){console.log(`[${e.name}] RoadManager: Planning initial road network.`);const a=[],l=new Set;function c(e){for(const o of e){const e=`${o.x},${o.y}`;l.has(e)||(a.push({x:o.x,y:o.y}),l.add(e))}}const m=e.find(FIND_SOURCES);for(const R of m){const E=null===(o=e.memory.containerPositions)||void 0===o?void 0:o[R.id];if(!E)continue;const u=new RoomPosition(E.x,E.y,e.name),y=u.lookFor(LOOK_STRUCTURES),d=u.lookFor(LOOK_CONSTRUCTION_SITES);if(y.some((e=>e.structureType===STRUCTURE_CONTAINER))||d.some((e=>e.structureType===STRUCTURE_CONTAINER))){c(PathFinder.search(u,{pos:r.pos,range:1},f).path)}}c(PathFinder.search(r.pos,{pos:t.pos,range:3},f).path),e.memory.roadSitesPlanned=a,console.log(`[${e.name}] RoadManager: Planned ${a.length} road segments.`)}const n=e.memory.roadSitesPlanned;if(!n||0===n.length)return;let i=0;const s=[...n];for(const T of s){if(i>=5)break;const p=new RoomPosition(T.x,T.y,e.name),g=p.lookFor(LOOK_STRUCTURES),S=p.lookFor(LOOK_CONSTRUCTION_SITES),_=g.some((e=>e.structureType===STRUCTURE_ROAD)),C=S.some((e=>e.structureType===STRUCTURE_ROAD));if(_||C)continue;if(e.getTerrain().get(T.x,T.y)===TERRAIN_MASK_WALL){Game.time%100==20&&console.log(`[${e.name}] RoadManager Warning: Tried to place road on wall at ${T.x},${T.y}. Pathing issue?`);continue}const O=e.createConstructionSite(T.x,T.y,STRUCTURE_ROAD);O===OK?i++:O!==ERR_FULL&&O!==ERR_INVALID_TARGET&&Game.time%20==10&&console.log(`[${e.name}] RoadManager: Failed to create road site at ${T.x},${T.y} with error ${O}`)}}const p=[[0,-2],[1,-1],[2,0],[1,1],[0,2],[-1,1],[-2,0],[-1,-1]],g=[[-1,-1],[0,-1],[1,-1],[-1,0],[1,0],[-1,1],[0,1],[1,1]];function S(e){if(Game.time%10!=0)return;switch(o(e)){case 2:_(e),C(e);break;case 2.5:T(e);break;case 3:_(e);break;case 3.5:C(e),_(e),T(e);break;default:Game.time}}function _(e){const o=e.controller;if(!o||!o.my||o.level<2)return;const r=CONTROLLER_STRUCTURES.extension[o.level];if(0===r)return;const t=r-(e.find(FIND_MY_STRUCTURES,{filter:e=>e.structureType===STRUCTURE_EXTENSION}).length+e.find(FIND_MY_CONSTRUCTION_SITES,{filter:e=>e.structureType===STRUCTURE_EXTENSION}).length);if(t<=0)return;const n=e.find(FIND_MY_SPAWNS)[0];if(!n)return;let i=0;for(const[o,r]of p){if(i>=t)break;const s=n.pos.x+o,a=n.pos.y+r;if(s<0||s>49||a<0||a>49)continue;const l=new RoomPosition(s,a,e.name);if(e.getTerrain().get(s,a)===TERRAIN_MASK_WALL||l.lookFor(LOOK_STRUCTURES).length>0||l.lookFor(LOOK_CONSTRUCTION_SITES).length>0)continue;const c=e.createConstructionSite(s,a,STRUCTURE_EXTENSION);c===OK?i++:Game.time%50==0&&c!==ERR_FULL&&console.log(`[${e.name}] Failed to place extension site at ${s},${a}: ${c}`)}}function C(e){const o=e.find(FIND_MY_SPAWNS)[0];if(!o)return;e.memory.containerPositions||(e.memory.containerPositions={});const r=e.find(FIND_SOURCES);for(const t of r){const r=e.memory.containerPositions[t.id];if(r){const o=new RoomPosition(r.x,r.y,e.name),n=o.lookFor(LOOK_STRUCTURES).some((e=>e.structureType===STRUCTURE_CONTAINER)),i=o.lookFor(LOOK_CONSTRUCTION_SITES).some((e=>e.structureType===STRUCTURE_CONTAINER));if(n||i)continue;delete e.memory.containerPositions[t.id],console.log(`[${e.name}] Container for source ${t.id} at (${r.x},${r.y}) is missing. Cleared memory, will replan.`)}r||Game.time%20!=0||console.log(`[${e.name}] Looking for container spot for source ${t.id}.`);const n=g.map((([o,r])=>new RoomPosition(t.pos.x+o,t.pos.y+r,e.name))).filter((o=>!(o.x<0||o.x>49||o.y<0||o.y>49)&&(e.getTerrain().get(o.x,o.y)!==TERRAIN_MASK_WALL&&(!(o.lookFor(LOOK_STRUCTURES).length>0)&&!(o.lookFor(LOOK_CONSTRUCTION_SITES).length>0)))));if(0===n.length){Game.time%50==0&&console.log(`[${e.name}] No suitable adjacent spot found for container near source ${t.id}.`);continue}n.sort(((e,r)=>o.pos.getRangeTo(e)-o.pos.getRangeTo(r)));const i=n[0],s=e.createConstructionSite(i.x,i.y,STRUCTURE_CONTAINER);s===OK?(e.memory.containerPositions[t.id]={x:i.x,y:i.y},console.log(`[${e.name}] Placed container site for source ${t.id} at (${i.x},${i.y}).`)):Game.time%50==0&&s!==ERR_FULL&&console.log(`[${e.name}] Failed to place container site for source ${t.id} at (${i.x},${i.y}): ${s}`)}}class O{collectEnergy(o){const r=o.pos.findClosestByPath(FIND_DROPPED_RESOURCES,{filter:e=>e.resourceType===RESOURCE_ENERGY&&e.amount>Math.min(50,o.store.getFreeCapacity(RESOURCE_ENERGY)/2)});if(r)return void(o.pickup(r)===ERR_NOT_IN_RANGE&&o.moveTo(r,{visualizePathStyle:{stroke:"#ffaa00"},range:1}));const t=o.room.find(FIND_STRUCTURES,{filter:r=>(r.structureType===STRUCTURE_CONTAINER||r.structureType===STRUCTURE_STORAGE)&&r.store.getUsedCapacity(RESOURCE_ENERGY)>(o.memory.role===e.Upgrader?100:50)});if(t.length>0){t.sort(((e,r)=>{const t=e.store.getUsedCapacity(RESOURCE_ENERGY)||0,n=r.store.getUsedCapacity(RESOURCE_ENERGY)||0;return n!==t?n-t:o.pos.getRangeTo(e)-o.pos.getRangeTo(r)}));const e=t[0];return void(e&&o.withdraw(e,RESOURCE_ENERGY)===ERR_NOT_IN_RANGE&&o.moveTo(e,{visualizePathStyle:{stroke:"#00ff00"},range:1}))}const n=o.room.memory.spawnQueue,i=!n||0===n.length;if(i){const e=o.room.find(FIND_STRUCTURES,{filter:e=>(e.structureType===STRUCTURE_SPAWN||e.structureType===STRUCTURE_EXTENSION)&&e.store.getUsedCapacity(RESOURCE_ENERGY)>0});if(e.length>0){const r=o.pos.findClosestByPath(e);return void(r&&o.withdraw(r,RESOURCE_ENERGY)===ERR_NOT_IN_RANGE&&o.moveTo(r,{visualizePathStyle:{stroke:"#ffff00"},range:1}))}}else o.memory.role===e.Upgrader&&Game.time%5==0&&o.say("‚è≥Spawn busy");const s=o.room.find(FIND_SOURCES_ACTIVE);if(s.length>0){if(o.memory.role===e.Upgrader&&(t.length>0||!i)&&o.room.energyAvailable>0)return void(Game.time%7==0&&o.say("ü§î Waiting"));const r=o.pos.findClosestByPath(s);r&&o.harvest(r)===ERR_NOT_IN_RANGE&&o.moveTo(r,{visualizePathStyle:{stroke:"#ff0000"},range:1})}else Game.time%10==0&&o.say("üö´ No Energy")}updateWorkingState(e){e.memory.atCapacity&&0===e.store.getUsedCapacity(RESOURCE_ENERGY)&&(e.memory.atCapacity=!1),e.memory.atCapacity||0!==e.store.getFreeCapacity(RESOURCE_ENERGY)||(e.memory.atCapacity=!0)}deliverEnergy(o){const r=o.room.find(FIND_STRUCTURES,{filter:e=>(e.structureType===STRUCTURE_SPAWN||e.structureType===STRUCTURE_EXTENSION||e.structureType===STRUCTURE_TOWER)&&e.store.getFreeCapacity(RESOURCE_ENERGY)>0});if(r.length>0){r.sort(((e,r)=>e.structureType===STRUCTURE_TOWER&&r.structureType!==STRUCTURE_TOWER?-1:r.structureType===STRUCTURE_TOWER&&e.structureType!==STRUCTURE_TOWER?1:e.structureType===STRUCTURE_TOWER&&r.structureType===STRUCTURE_TOWER?(e.store.getUsedCapacity(RESOURCE_ENERGY)||0)-(r.store.getUsedCapacity(RESOURCE_ENERGY)||0):o.pos.getRangeTo(e)-o.pos.getRangeTo(r)));const e=r[0];e&&o.transfer(e,RESOURCE_ENERGY)===ERR_NOT_IN_RANGE&&o.moveTo(e,{visualizePathStyle:{stroke:"#ffffff"},range:1})}else o.memory.role!==e.Upgrader&&o.say("ü§∑‚Äç‚ôÇÔ∏è full?")}}function U(e){if(e.store.getFreeCapacity(RESOURCE_ENERGY)>0){const o=e.pos.findClosestByPath(FIND_DROPPED_RESOURCES,{filter:e=>e.resourceType===RESOURCE_ENERGY&&e.amount>=50});if(o)return e.pickup(o)===ERR_NOT_IN_RANGE&&e.moveTo(o,{visualizePathStyle:{stroke:"#ffaa00"},range:1}),void e.say("üí∞Êç°Ëµ∑")}const o=e.room.find(FIND_CONSTRUCTION_SITES);if(o.length>0)if(e.say("üî®IdleBuild"),0===e.store.getUsedCapacity(RESOURCE_ENERGY)){const o=e.pos.findClosestByPath(FIND_STRUCTURES,{filter:e=>(e.structureType===STRUCTURE_CONTAINER||e.structureType===STRUCTURE_STORAGE)&&e.store[RESOURCE_ENERGY]>0});if(o)return void(e.withdraw(o,RESOURCE_ENERGY)===ERR_NOT_IN_RANGE&&e.moveTo(o,{visualizePathStyle:{stroke:"#00ff00"},range:1}))}else{const r=e.pos.findClosestByPath(o);if(r)return void(e.build(r)===ERR_NOT_IN_RANGE&&e.moveTo(r,{visualizePathStyle:{stroke:"#ffffff"},range:3}))}const t=e.room.controller;if(t&&t.my&&function(e){var o;const t=a(e),n=r(e);for(const e of i)if(n[e]<((null===(o=t[e])||void 0===o?void 0:o.count)||0))return!1;return!0}(e.room)){e.say("‚¨ÜÔ∏èIdleUpg");const o=e.room.find(FIND_STRUCTURES,{filter:e=>(e.structureType===STRUCTURE_CONTAINER||e.structureType===STRUCTURE_STORAGE)&&e.store[RESOURCE_ENERGY]>0});if(o.reduce(((e,o)=>e+o.store[RESOURCE_ENERGY]),0)>=200||e.room.energyAvailable>=200){if(0!==e.store.getUsedCapacity(RESOURCE_ENERGY))return void(e.upgradeController(t)===ERR_NOT_IN_RANGE&&e.moveTo(t,{visualizePathStyle:{stroke:"#4CAF50"},range:3}));if(o.length>0){o.sort(((e,o)=>o.store[RESOURCE_ENERGY]-e.store[RESOURCE_ENERGY]));const r=o[0];return void(e.withdraw(r,RESOURCE_ENERGY)===ERR_NOT_IN_RANGE&&e.moveTo(r,{visualizePathStyle:{stroke:"#00ff00"},range:1}))}}else Game.time%11==0&&e.say("üí∞Low E")}Game.time%3==0&&e.say("ü™ë idle")}const N={[STRUCTURE_CONTAINER]:{pct:.8},[STRUCTURE_ROAD]:{pct:.5},[STRUCTURE_EXTENSION]:{pct:.8}};const h={harvester:new class extends O{run(e){this.updateWorkingState(e),e.memory.atCapacity?this.performDelivery(e):this.performHarvest(e)}performHarvest(e){let o=null;if(e.memory.sourceId&&(o=Game.getObjectById(e.memory.sourceId),o||(delete e.memory.sourceId,o=null)),!o){const r=e.room.find(FIND_SOURCES_ACTIVE);r.length>0&&(o=e.pos.findClosestByPath(r),o&&(e.memory.sourceId=o.id,e.say("üîÑ New Src")))}if(o){const r=e.harvest(o);r===ERR_NOT_IN_RANGE?e.moveTo(o,{visualizePathStyle:{stroke:"#ffaa00"}}):r===OK||(r===ERR_NOT_ENOUGH_RESOURCES?(delete e.memory.sourceId,e.say("‚õèÔ∏è Empty")):r===ERR_NO_BODYPART&&e.say("üíî No WORK"))}else e.say("‚ùì No Src"),U(e)}performDelivery(e){if(super.deliverEnergy(e),e.store.getUsedCapacity(RESOURCE_ENERGY)>0){e.room.find(FIND_STRUCTURES,{filter:e=>(e.structureType===STRUCTURE_SPAWN||e.structureType===STRUCTURE_EXTENSION)&&e.store.getFreeCapacity(RESOURCE_ENERGY)>0}).length>0||(e.say("üöö IdleFull"),U(e))}}},builder:new class extends O{run(e){this.updateWorkingState(e),e.memory.atCapacity?this.performWork(e):super.collectEnergy(e)}performWork(e){this.tryPriorityRepair(e)||this.tryBuild(e)||this.tryGeneralRepair(e)||(e.say("üë∑ Idle"),U(e))}tryPriorityRepair(e){const o=e.room.find(FIND_STRUCTURES,{filter:e=>{if(e.structureType===STRUCTURE_WALL||e.structureType===STRUCTURE_RAMPART)return!1;const o=N[e.structureType];return!!o&&(null!=o.pct&&e.hits<e.hitsMax*o.pct||null!=o.hp&&e.hits<o.hp)}});if(o.length>0){const r=e.pos.findClosestByPath(o);if(r)return e.say("üõ†Ô∏è Prior"),e.repair(r)===ERR_NOT_IN_RANGE&&e.moveTo(r,{visualizePathStyle:{stroke:"#ff0000"}}),!0}return!1}tryBuild(e){const o=e.room.find(FIND_CONSTRUCTION_SITES);if(o.length>0){const r=e.pos.findClosestByPath(o);if(r)return e.say("üöß Build"),e.build(r)===ERR_NOT_IN_RANGE&&e.moveTo(r,{visualizePathStyle:{stroke:"#ffffff"}}),!0}return!1}tryGeneralRepair(e){const o=e.room.find(FIND_STRUCTURES,{filter:e=>e.structureType!==STRUCTURE_WALL&&e.structureType!==STRUCTURE_RAMPART&&e.hits<e.hitsMax});if(o.length>0){const r=e.pos.findClosestByPath(o);if(r)return e.say("üîß Repair"),e.repair(r)===ERR_NOT_IN_RANGE&&e.moveTo(r,{visualizePathStyle:{stroke:"#ffaa00"}}),!0}return!1}},upgrader:new class extends O{run(e){this.updateWorkingState(e),e.memory.atCapacity?this.performUpgrade(e):super.collectEnergy(e)}performUpgrade(e){const o=e.room.controller;if(o&&o.my){const r=e.upgradeController(o);r===ERR_NOT_IN_RANGE?e.moveTo(o,{visualizePathStyle:{stroke:"#4CAF50"},range:3}):r===OK||(r===ERR_NOT_ENOUGH_RESOURCES?(e.memory.atCapacity=!1,e.say("‚õèÔ∏è Empty!")):e.say(`‚ö†Ô∏è UpgErr ${r}`))}else e.say("‚ùì No Ctrlr"),U(e)}},miner:new class extends O{run(e){if(!this.hasValidAssignments(e))return;const{x:o,y:r}=e.room.memory.containerPositions[e.memory.sourceId],t=new RoomPosition(o,r,e.room.name);e.pos.isEqualTo(t)?this.performHarvesting(e):this.moveToDesignatedPosition(e,t)}hasValidAssignments(e){const o=e.memory.sourceId;if(!o)return e.say("‚ùìNoSrcID"),console.log(`Miner ${e.name} is missing sourceId.`),!1;const r=e.room.memory.containerPositions;return!(!r||!r[o])||(e.say("‚ùåNoSpot"),console.log(`Miner ${e.name} (source: ${o}) is missing a designated containerPosition in room memory.`),!1)}moveToDesignatedPosition(e,o){e.moveTo(o,{visualizePathStyle:{stroke:"#ffaa00"},range:0})}performHarvesting(e){const o=Game.getObjectById(e.memory.sourceId);if(!o)return e.say("‚ùìSrcGone"),console.log(`Miner ${e.name} assigned source ${e.memory.sourceId} no longer exists or is not visible.`),void delete e.memory.sourceId;const r=e.harvest(o);r===OK||(r===ERR_NOT_ENOUGH_RESOURCES?e.say("‚õèÔ∏èEmpty"):r===ERR_BUSY||(r===ERR_NO_BODYPART?(e.say("üíîNoWORK"),console.log(`Miner ${e.name} has no WORK parts.`)):r===ERR_NOT_OWNER?e.say("üè¢NotMyCtrlr"):r===ERR_INVALID_TARGET?(e.say("‚ùåInvTrg"),console.log(`Miner ${e.name} has invalid harvest target: ${o}`),delete e.memory.sourceId):(e.say(`üíÄHrvFail:${r}`),console.log(`Miner ${e.name} failed to harvest source ${o.id} with error: ${r}`))))}},hauler:new class extends O{run(e){if(this.updateWorkingState(e),e.memory.atCapacity){const o=e.room.find(FIND_STRUCTURES,{filter:e=>(e.structureType===STRUCTURE_SPAWN||e.structureType===STRUCTURE_EXTENSION)&&e.store.getFreeCapacity(RESOURCE_ENERGY)>0});if(o.length>0)return void(e.transfer(o[0],RESOURCE_ENERGY)===ERR_NOT_IN_RANGE&&e.moveTo(o[0]))}const o=e.memory.containerId,r=o?Game.getObjectById(o):null;r&&r.store.getUsedCapacity(RESOURCE_ENERGY)>0?e.withdraw(r,RESOURCE_ENERGY)===ERR_NOT_IN_RANGE&&e.moveTo(r):U(e)}}},v=function(e,o){const r=Game.cpu.getUsed(),t=o(),n=Game.cpu.getUsed()-r;return console.log(`üìä ${e}: ${n.toFixed(2)} CPU`),t}("main loop",(function(){!function(){for(const e in Memory.creeps)e in Game.creeps||(delete Memory.creeps[e],console.log(`üßπ Cleaned up memory for dead creep: ${e}`))}();const e=Object.values(Game.spawns)[0];e&&d(e);for(const e in Game.rooms){const o=Game.rooms[e];S(o),Game.time%10==0&&n(o)}for(const e in Game.creeps){const o=Game.creeps[e];if(!o.spawning){const e=o.memory.role;e&&h[e]?h[e].run(o):console.log(`Creep ${o.name} has an unknown or undefined role: ${e}`)}}}));exports.loop=v;
