"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const e={harvester:2,upgrader:1},o={harvester:[WORK,CARRY,MOVE,MOVE],upgrader:[WORK,CARRY,MOVE,MOVE]};const r={harvester:{run(e){if(e.store.getFreeCapacity()>0){const o=e.room.find(FIND_SOURCES);e.harvest(o[0])===ERR_NOT_IN_RANGE&&e.moveTo(o[0])}else{const o=e.room.find(FIND_STRUCTURES,{filter:e=>e.structureType===STRUCTURE_SPAWN&&e.store.getFreeCapacity(RESOURCE_ENERGY)>0});o.length>0&&e.transfer(o[0],RESOURCE_ENERGY)===ERR_NOT_IN_RANGE&&e.moveTo(o[0])}}},upgrader:{run(e){if(e.memory.working&&0===e.store[RESOURCE_ENERGY]&&(e.memory.working=!1),e.memory.working||0!==e.store.getFreeCapacity()||(e.memory.working=!0),e.memory.working)e.upgradeController(e.room.controller)===ERR_NOT_IN_RANGE&&e.moveTo(e.room.controller);else{const o=e.room.find(FIND_STRUCTURES,{filter:e=>(e.structureType===STRUCTURE_SPAWN||e.structureType===STRUCTURE_EXTENSION)&&e.store.getUsedCapacity(RESOURCE_ENERGY)>0});if(o.length>0)e.withdraw(o[0],RESOURCE_ENERGY)===ERR_NOT_IN_RANGE&&e.moveTo(o[0]);else{const o=e.room.find(FIND_SOURCES);e.harvest(o[0])===ERR_NOT_IN_RANGE&&e.moveTo(o[0])}}}}};exports.loop=function(){var t;const n=Game.cpu.getUsed();!function(){for(const e in Memory.creeps)e in Game.creeps||(delete Memory.creeps[e],console.log(`🧹 Cleaned up memory for dead creep: ${e}`))}();const s=Object.values(Game.spawns)[0];s&&function(r){for(const t in e){const n=t;if(Object.values(Game.creeps).filter((e=>e.memory.role===n)).length<e[n]){const e=`${n}_${Game.time}`;if(r.spawnCreep(o[n],e,{memory:{role:n}})===OK){console.log(`Spawning ${n}: ${e}`);break}}}}(s);for(const e in Game.creeps){const o=Game.creeps[e],n=o.memory.role;null===(t=r[n])||void 0===t||t.run(o)}const R=Game.cpu.getUsed();console.log(`⏱️ Tick CPU: ${(R-n).toFixed(2)}`)};
